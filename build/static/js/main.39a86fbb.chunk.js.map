{"version":3,"sources":["container/courseListDis.js","container/home.js","actions/index.js","component/header.js","component/footer.js","container/courseEnqForm.js","container/userEnquries.js","component/routing.js","reducers/courseReducers.js","reducers/index.js","reducers/doubtsReducer.js","store/index.js","index.js"],"names":["displayComp","props","console","log","dataList","map","item","className","course_name","duration","time","to","id","type","_id","renderMovies","Home","values","this","dispatch","payload","fetch","method","then","responce","json","headers","body","JSON","stringify","data","mydata","cList","Component","protoTypes","PropTypes","func","connect","state","Course","Header","data-toggle","data-target","Footer","EnquiryForm","hadleInputchange","e","setState","target","name","value","submitForm","event","preventDefault","courseid","Math","floor","random","courseName","email","mobile","Fragment","onSubmit","readOnly","onChange","formData","getValues","UserEnquiryForm","submitEnqForm","doubts","Routing","exact","path","component","UserForm","UserDoubtsForm","action","formValues","rootReducer","combineReducers","Formenq","Userdoubts","doubtsFormData","doubtsData","store","createStore","reducers","applyMiddleware","promiseMiddleware","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39a86fbb.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../component/style.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst displayComp= (props)=>{\r\n   console.log(props)\r\n    const renderMovies=({dataList}) =>{\r\n       \r\n        if(dataList){\r\n            return dataList.map((item)=>{\r\n                console.log(item)\r\n                return(\r\n                    <div className=\"course_list_wrapper\">\r\n                    <div className=\"row\" key={item._id}>\r\n                        <div className=\"col-md-10\" >\r\n                            <h5>{item.course_name}</h5>\r\n                            <div><strong>Duration : </strong>{item.duration}</div>\r\n                            <div><strong>Time :</strong> {item.time}</div>\r\n                        </div>\r\n                        \r\n                        <div className=\"col-md-2 marginPadding\">\r\n                            <Link to={`/enquiries/${item.id}`} type=\"button\" className=\"btn btn-primary\">Enquiry</Link>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            {renderMovies(props)}\r\n        </div>\r\n    )\r\n}\r\nexport default displayComp","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {courseList, userEnquiry} from '../actions'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport DisplayComp from './courseListDis'\r\n\r\n\r\n\r\nclass Home extends Component{\r\n    componentDidMount(){\r\n        this.props.dispatch(courseList())\r\n        this.props.dispatch(userEnquiry())\r\n        \r\n        \r\n    }\r\n    render(){\r\n        console.log(this.props.mydata)\r\n        return(\r\n            <div>\r\n                <DisplayComp dataList={this.props.mydata.cList}/>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    console.log(state);\r\n    \r\n    return{\r\n        mydata:state.Course\r\n    }\r\n    \r\n}\r\n\r\nHome.protoTypes={\r\n    dispatch:PropTypes.func\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home)\r\n\r\n\r\n","const baseurl=\"http://localhost:8900/course_list\"\r\nconst enqurl=\"http://localhost:8700/enq_data\"\r\n\r\n\r\nexport function courseList(){\r\n    const output = fetch(baseurl,{method:'GET'})\r\n                .then((responce) => responce.json())\r\n    return{\r\n        type:'COURSE_LIST',\r\n        payload:output\r\n    }\r\n} \r\n\r\n\r\n\r\n\r\n\r\nexport function userEnquiry(values){\r\n    console.log(values)\r\n    const output = fetch(enqurl,{\r\n        method:'POST',\r\n        headers:{\r\n            'Accept':'application/json',\r\n            'content-type':'application/json'\r\n        },\r\n        body:JSON.stringify(values)\r\n        \r\n    })\r\n    .then((data) => data.json())\r\n\r\n    return{\r\n        type:'FORM_DATA',\r\n        payload:output\r\n    }\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Header = ()=>{\r\n    return(\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\r\n                    <span className=\"navbar-brand\">COURSE ENQ. APP</span>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to='/'>Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to='/userdoubts'>User Enquires</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            <hr/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header ","import React from 'react'\r\n\r\nconst Footer = ()=>{\r\n    return(\r\n        <footer>\r\n            <hr/>\r\n            <center><h5>&copy; Learning Developer.</h5></center>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer ","import React, {Component} from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nclass EnquiryForm extends Component{\r\n    constructor(props){\r\n        super(props) \r\n        this.state={\r\n            values: {\r\n                courseid:Math.floor(Math.random()*10000),\r\n                courseName:'',\r\n                name:'',\r\n                email:'',\r\n                mobile:''\r\n            }\r\n        }\r\n    }\r\n    \r\n    hadleInputchange= (e) => {\r\n        this.setState(\r\n            {\r\n                values: { ...this.state.values, [e.target.name]: e.target.value \r\n                }\r\n            },\r\n              () => {   \r\n                this.props.dispatch({\r\n                    type: \"SET_FORMVALUES\",\r\n                    payload: this.state.values\r\n                  })\r\n                }\r\n        )\r\n    }\r\n    \r\n    submitForm=(event) =>{\r\n        event.preventDefault();\r\n        this.props.dispatch({\r\n        type: \"FORM_DATA\",\r\n       // payload: this.state.values\r\n    })\r\n               \r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <form onSubmit={this.submitForm}>\r\n                <div className=\"form-group\">\r\n                    <label>Course ID</label>\r\n                    <input type=\"text\" name=\"courseid\" id=\"courseid\" readOnly className=\"form-control\" value={this.state.courseid} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Course Name</label>\r\n                    <input type=\"text\" name=\"courseName\" className=\"form-control\" value={this.state.courseName} onChange={this.hadleInputchange}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input type=\"text\" \r\n                    name=\"name\" \r\n                    id=\"name\"\r\n                    className=\"form-control\" \r\n                    value={this.state.name} \r\n                    onChange={this.hadleInputchange}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Email ID</label>\r\n                    <input type=\"email\" name=\"email\" className=\"form-control\" value={this.state.email} onChange={this.hadleInputchange} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Mobile No:</label>\r\n                    <input type=\"number\" name=\"mobile\" value={this.state.mobile} className=\"form-control\" onChange={this.hadleInputchange}/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                </form>\r\n                \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        formData: state.getValues\r\n    } \r\n  }\r\n\r\nEnquiryForm.protoTypes={\r\n    dispatch:PropTypes.func\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(EnquiryForm);","import React, {Component} from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nclass UserEnquiryForm extends Component{\r\n    constructor(props){\r\n        super(props) \r\n        this.state={\r\n            values: {\r\n                name:'',\r\n                email:'',\r\n                doubts:'',\r\n            }\r\n        }\r\n    }\r\n    \r\n    hadleInputchange= (e) => {\r\n        this.setState(\r\n            {\r\n                values: { ...this.state.values, [e.target.name]: e.target.value \r\n                }\r\n            },\r\n              () => {   \r\n                this.props.dispatch({\r\n                    type: \"SET_ENQVALUES\",\r\n                    payload: this.state.values\r\n                  })\r\n                }\r\n        )\r\n    }\r\n    \r\n    submitEnqForm=(event) =>{\r\n        event.preventDefault();\r\n        this.props.dispatch({\r\n        type: \"ENQFORM_DATA\",\r\n       // payload: this.state.values\r\n    })\r\n               \r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <form onSubmit={this.submitEnqForm}>\r\n                <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input type=\"text\" \r\n                    name=\"name\" \r\n                    id=\"name\"\r\n                    className=\"form-control\" \r\n                    value={this.state.name} \r\n                    onChange={this.hadleInputchange}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Email ID</label>\r\n                    <input type=\"email\" name=\"email\" className=\"form-control\" value={this.state.email} onChange={this.hadleInputchange} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Doubts:</label>\r\n                    <input type=\"text\" name=\"doubts\" value={this.state.doubts} className=\"form-control\" onChange={this.hadleInputchange}/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                </form>\r\n                \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        formData: state.getValues\r\n    } \r\n  }\r\n\r\n  UserEnquiryForm.protoTypes={\r\n    dispatch:PropTypes.func\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(UserEnquiryForm);","import React from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport Home from '../container/home'\r\nimport Header from './header';\r\nimport Footer from './footer';\r\nimport UserForm from '../container/courseEnqForm'\r\nimport UserDoubtsForm from '../container/userEnquries'\r\n\r\n\r\n\r\nconst Routing = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Header/>\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route path=\"/enquiries/:id\" component={UserForm}/>\r\n            <Route path=\"/userdoubts\" component={UserDoubtsForm}/>\r\n            <Footer/>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routing ","import { func } from \"prop-types\";\r\n\r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case 'COURSE_LIST':\r\n            return {...state, cList:action.payload}\r\n        case 'SET_FORMVALUES':\r\n                return {...state, formValues: action.payload}\r\n        case 'FORM_DATA':\r\n                return {...state, getValues: action.payload}\r\n                \r\n        default:\r\n            return state;\r\n            \r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport Course from './courseReducers'\r\nimport Formenq from './courseReducers'\r\nimport Userdoubts from './doubtsReducer'\r\n\r\nconst rootReducer =combineReducers({\r\n    Course,\r\n    Formenq,\r\n    Userdoubts\r\n})\r\n\r\nexport default rootReducer","export default function(state={},action){\r\n    switch(action.type){\r\n        case 'SET_ENQVALUES':\r\n            return {...state, doubtsFormData:action.payload}\r\n        case 'ENQFORM_DATA':\r\n            return {...state, doubtsData:action.payload}\r\n                \r\n        default:\r\n            return state;\r\n            \r\n    }\r\n}","import {createStore, applyMiddleware} from 'redux'\r\nimport {logger} from 'redux-logger'\r\nimport promiseMiddleware from 'redux-promise'\r\nimport reducers from '../reducers'\r\n\r\nlet store = createStore(reducers, applyMiddleware(promiseMiddleware,logger));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Routing from './component/routing';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Routing/>\r\n    </Provider>, document.getElementById('root')\r\n)"],"sourceRoot":""}